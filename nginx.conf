user nginx;
worker_processes  1;
error_log /dev/stderr debug;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format json_combined escape=json
                 '{'
                   '"time_local":"$time_local",'
                   '"remote_addr":"$remote_addr",'
                   '"remote_user":"$remote_user",'
                   '"request":"$request",'
                   '"status": "$status",'
                   '"body_bytes_sent":"$body_bytes_sent",'
                   '"request_time":"$request_time",'
                   '"http_referrer":"$http_referer",'
                   '"http_user_agent":"$http_user_agent"'
                 '}';

    access_log /var/log/nginx/access.log json_combined;
    error_log /dev/stderr debug;

    upstream api {
        server api:4000;
    }

    upstream ui {
        server ui:4100;
    }

    server {
        listen 80;
        server_name _;

        # API requests - /api/* -> api:4000/*
        location /api/ {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # GraphQL endpoint (legacy support)
        location /graphql {
            proxy_pass http://api/graphql;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Next.js special paths
        location /_next/ {
            proxy_pass http://ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # UI requests - everything else -> ui:4100
        location / {
            proxy_pass http://ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
